// "Flag_RoundArch.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Flag_RoundArch.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Flag_RoundArch_version_
const char Flag_RoundArch_version[4] = { '0','1','9','d' };
#define _Flag_RoundArch_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Flag_RoundArch_vertexcount_
const unsigned Flag_RoundArch_vertexcount = 149;
#define _Flag_RoundArch_vertexcount_
#endif
#ifndef _Flag_RoundArch_indexcount_
const unsigned Flag_RoundArch_indexcount = 396;
#define _Flag_RoundArch_indexcount_
#endif
#ifndef _Flag_RoundArch_materialcount_
const unsigned Flag_RoundArch_materialcount = 1; // can be used for batched draws
#define _Flag_RoundArch_materialcount_
#endif
#ifndef _Flag_RoundArch_meshcount_
const unsigned Flag_RoundArch_meshcount = 1;
#define _Flag_RoundArch_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Flag_RoundArch_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Flag_RoundArch_vertices[149] =
{
	{	{ 1.084053f, 3.088839f, 0.006105f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.610500f, 0.792000f, -0.001500f }	},
	{	{ 1.083555f, 3.088839f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.610500f, 0.792000f, -0.001500f }	},
	{	{ 0.895558f, 3.233761f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.597400f, 0.802000f, -0.001500f }	},
	{	{ 0.896172f, 3.233761f, 0.056483f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.595100f, 0.803700f, -0.001500f }	},
	{	{ 0.865168f, 3.256218f, 0.089084f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.532700f, 0.846300f, -0.001300f }	},
	{	{ 0.864464f, 3.256218f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.538800f, 0.842400f, -0.001400f }	},
	{	{ 0.748222f, 3.323076f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498900f, 0.866700f, -0.001200f }	},
	{	{ 0.748866f, 3.323076f, 0.064945f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498900f, 0.866700f, -0.001200f }	},
	{	{ 0.747733f, 2.580036f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.037500f, 0.036200f, -0.998600f }	},
	{	{ 0.521092f, 2.435064f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.029200f, 0.055200f, -0.998000f }	},
	{	{ 0.384814f, 2.539146f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.025200f, 0.059800f, -0.997900f }	},
	{	{ 0.597975f, 2.697261f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.036900f, 0.038700f, -0.998600f }	},
	{	{ 0.597975f, 2.697261f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.063200f, -0.072100f, -0.995400f }	},
	{	{ 0.384814f, 2.539146f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.047200f, -0.089500f, -0.994900f }	},
	{	{ 0.342326f, 2.645878f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.025200f, -0.045200f, -0.998700f }	},
	{	{ 0.537661f, 2.792719f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.034200f, -0.037200f, -0.998700f }	},
	{	{ -0.080625f, 2.680856f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.082023f, 2.551819f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.220015f, 2.563355f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.208500f, 2.695072f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.226728f, 2.578460f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.015800f, -0.074800f, -0.997100f }	},
	{	{ 0.082023f, 2.551818f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.082023f, 2.710226f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.205564f, 2.739823f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.082023f, 2.551819f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.010800f, -0.234200f, -0.972100f }	},
	{	{ -0.082033f, 2.508288f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.010200f, -0.234100f, -0.972200f }	},
	{	{ -0.230571f, 2.522354f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.070400f, -0.224500f, -0.971900f }	},
	{	{ -0.220015f, 2.563355f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.074100f, -0.223600f, -0.971900f }	},
	{	{ 0.330489f, 2.792107f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.464999f, 2.866661f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.444421f, 2.885935f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.315712f, 2.802353f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.283932f, 2.900395f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.381313f, 2.948852f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.864464f, 3.256218f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.645897f, 2.898285f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.061300f, -0.040200f, -0.997300f }	},
	{	{ 0.570445f, 2.976655f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.748222f, 3.323076f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.200679f, 2.769362f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.185753f, 2.859599f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.263250f, 2.887355f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.235605f, 2.505571f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.027000f, -0.138800f, -0.990000f }	},
	{	{ 0.388111f, 2.382234f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015100f, 0.069800f, -0.997400f }	},
	{	{ 0.235605f, 2.505571f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005300f, 0.078000f, -0.996900f }	},
	{	{ 0.895558f, 3.233761f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.146900f, -0.078800f, -0.986000f }	},
	{	{ 0.700987f, 2.841589f, -0.185073f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.104300f, -0.073200f, -0.991900f }	},
	{	{ 0.864464f, 3.256218f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.146900f, -0.078800f, -0.986000f }	},
	{	{ -0.910256f, 3.222431f, -0.184274f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.600700f, 0.799500f, -0.002300f }	},
	{	{ -1.083555f, 3.088839f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.610500f, 0.792000f, -0.001900f }	},
	{	{ -1.084500f, 3.088839f, 0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.610500f, 0.792000f, -0.001900f }	},
	{	{ -0.896502f, 3.233761f, 0.112634f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.601100f, 0.799200f, -0.002300f }	},
	{	{ -0.735142f, 3.330600f, -0.198502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498700f, 0.866800f, -0.001600f }	},
	{	{ -0.864464f, 3.256218f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.542400f, 0.840100f, -0.002100f }	},
	{	{ -0.865409f, 3.256218f, 0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.549200f, 0.835700f, -0.002200f }	},
	{	{ -0.749167f, 3.323076f, 0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498700f, 0.866800f, -0.001600f }	},
	{	{ -0.369865f, 2.603428f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.024200f, 0.039100f, -0.998900f }	},
	{	{ -0.447924f, 2.516523f, -0.188824f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023900f, 0.041300f, -0.998900f }	},
	{	{ -0.771689f, 2.595359f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.031800f, 0.034800f, -0.998900f }	},
	{	{ -0.614350f, 2.770874f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.031900f, 0.034600f, -0.998900f }	},
	{	{ -0.350562f, 2.640336f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.132700f, -0.209200f, -0.968800f }	},
	{	{ -0.369865f, 2.603428f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131800f, -0.209400f, -0.968900f }	},
	{	{ -0.614350f, 2.770874f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.143400f, -0.182200f, -0.972700f }	},
	{	{ -0.590405f, 2.801593f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.143400f, -0.181800f, -0.972800f }	},
	{	{ 0.118196f, 2.380131f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.082400f, -0.996600f }	},
	{	{ 0.082033f, 2.508288f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.082400f, -0.996600f }	},
	{	{ 0.082033f, 2.508288f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007000f, -0.203300f, -0.979100f }	},
	{	{ 0.082023f, 2.551818f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007400f, -0.202000f, -0.979400f }	},
	{	{ -0.320805f, 2.911750f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.334290f, 2.808259f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.466010f, 2.930132f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.405963f, 2.963967f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.553554f, 2.961207f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.006400f, -0.006700f, -1.000000f }	},
	{	{ -0.654713f, 2.872642f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005400f, -0.005700f, -1.000000f }	},
	{	{ -0.864464f, 3.256218f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011600f, -0.012200f, -0.999900f }	},
	{	{ -0.735142f, 3.330600f, -0.198502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011600f, -0.012200f, -0.999900f }	},
	{	{ -0.338391f, 2.732271f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.350562f, 2.640336f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.590405f, 2.801593f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.495917f, 2.884318f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.185753f, 2.859599f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.206139f, 2.747923f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.654713f, 2.872642f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.147400f, -0.123100f, -0.981400f }	},
	{	{ -0.707845f, 2.845913f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.147700f, -0.113600f, -0.982500f }	},
	{	{ -0.910256f, 3.222431f, -0.184274f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.148900f, -0.081800f, -0.985500f }	},
	{	{ -0.864464f, 3.256218f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.148900f, -0.081800f, -0.985500f }	},
	{	{ -0.082023f, 2.725560f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.082023f, 2.839832f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.082023f, 2.839832f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.073632f, 2.738147f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.131038f, 2.250355f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001400f, 0.049500f, -0.998800f }	},
	{	{ -0.082033f, 2.508288f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.004900f, 0.051900f, -0.998600f }	},
	{	{ 0.082033f, 2.508288f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.022300f, 0.058600f, -0.998000f }	},
	{	{ 0.072297f, 2.389982f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.022300f, 0.058600f, -0.998000f }	},
	{	{ -0.388111f, 2.382234f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.019800f, 0.046000f, -0.998700f }	},
	{	{ -0.230571f, 2.522354f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.018200f, 0.044000f, -0.998900f }	},
	{	{ -0.529087f, 2.998859f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.193200f, -0.123700f, -0.973300f }	},
	{	{ -0.553554f, 2.961207f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.175900f, -0.124600f, -0.976500f }	},
	{	{ -0.735142f, 3.330600f, -0.198502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.220000f, -0.122300f, -0.967800f }	},
	{	{ -0.721343f, 3.338536f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.220000f, -0.122300f, -0.967800f }	},
	{	{ -0.721343f, 3.338536f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498700f, 0.866800f, -0.001600f }	},
	{	{ -0.737915f, 3.329548f, 0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498700f, 0.866800f, -0.001600f }	},
	{	{ 0.748222f, 3.323076f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.349600f, -0.189800f, -0.917500f }	},
	{	{ 0.570445f, 2.976655f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.279600f, -0.199000f, -0.939300f }	},
	{	{ 0.547091f, 2.998836f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.290500f, -0.197700f, -0.936200f }	},
	{	{ 0.736970f, 3.329548f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.349600f, -0.189800f, -0.917500f }	},
	{	{ 0.205564f, 2.739823f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.100200f, -0.334000f, -0.937200f }	},
	{	{ 0.082023f, 2.710226f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.053900f, -0.276300f, -0.959500f }	},
	{	{ 0.073632f, 2.738147f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.051400f, -0.273200f, -0.960600f }	},
	{	{ 0.200679f, 2.769362f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.104800f, -0.339900f, -0.934600f }	},
	{	{ -0.082023f, 2.725560f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001200f, -0.219900f, -0.975500f }	},
	{	{ -0.080625f, 2.680856f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002500f, -0.221200f, -0.975200f }	},
	{	{ -0.208500f, 2.695072f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.039800f, -0.170300f, -0.984600f }	},
	{	{ -0.206139f, 2.747923f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.043200f, -0.164300f, -0.985500f }	},
	{	{ 0.736970f, 3.329548f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498800f, 0.866700f, -0.001200f }	},
	{	{ 0.737695f, 3.329548f, 0.095252f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498800f, 0.866700f, -0.001200f }	},
	{	{ 0.653115f, 3.377778f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498600f, 0.866800f, -0.001200f }	},
	{	{ 0.653403f, 3.377778f, -0.084823f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498600f, 0.866800f, -0.001200f }	},
	{	{ 0.464999f, 2.866661f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.207100f, -0.344700f, -0.915600f }	},
	{	{ 0.330489f, 2.792107f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.181200f, -0.355600f, -0.916900f }	},
	{	{ 0.315712f, 2.802353f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.160100f, -0.364200f, -0.917400f }	},
	{	{ 0.444421f, 2.885935f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.207100f, -0.344700f, -0.915600f }	},
	{	{ 0.736970f, 3.329548f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.547091f, 2.998836f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.485064f, 3.060674f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.653115f, 3.377778f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.653115f, 3.377778f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498600f, 0.866800f, -0.001500f }	},
	{	{ -0.654060f, 3.377778f, 0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498600f, 0.866800f, -0.001500f }	},
	{	{ -0.334290f, 2.808259f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.094700f, -0.129800f, -0.987000f }	},
	{	{ -0.338391f, 2.732271f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.074400f, -0.136900f, -0.987800f }	},
	{	{ -0.495917f, 2.884318f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.130600f, -0.123700f, -0.983700f }	},
	{	{ -0.466010f, 2.930132f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.136100f, -0.124300f, -0.982900f }	},
	{	{ -0.469961f, 3.032175f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.529087f, 2.998859f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.721343f, 3.338536f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.653115f, 3.377778f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.700987f, 2.841589f, -0.185073f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.038400f, 0.023900f, -0.999000f }	},
	{	{ 0.852650f, 2.690489f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.038800f, 0.024400f, -0.999000f }	},
	{	{ 0.464999f, 2.866661f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.220500f, -0.205900f, -0.953400f }	},
	{	{ 0.444421f, 2.885935f, -0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.220500f, -0.205900f, -0.953400f }	},
	{	{ 1.083555f, 3.088839f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.037200f, 0.022000f, -0.999100f }	},
	{	{ 0.895558f, 3.233761f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.037200f, 0.022000f, -0.999100f }	},
	{	{ -0.707845f, 2.845913f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.039600f, 0.031300f, -0.998700f }	},
	{	{ -0.848878f, 2.735892f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.039600f, 0.031300f, -0.998700f }	},
	{	{ -0.707845f, 2.845913f, -0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.053100f, 0.039500f, -0.997800f }	},
	{	{ -0.855900f, 2.907496f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.053100f, 0.039500f, -0.997800f }	},
	{	{ -1.083555f, 3.088839f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.053100f, 0.039500f, -0.997800f }	},
	{	{ -0.910256f, 3.222431f, -0.184274f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.053100f, 0.039500f, -0.997800f }	},
	{	{ -0.521092f, 2.435064f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.025000f, 0.039200f, -0.998900f }	},
	{	{ -0.472361f, 2.415704f, -0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022100f, 0.047200f, -0.998600f }	},
};
#define _Flag_RoundArch_vertices_
#endif
#ifndef _Flag_RoundArch_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Flag_RoundArch_indices[396] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 16, 18,
	 20, 21, 22,
	 23, 20, 22,
	 24, 25, 26,
	 27, 24, 26,
	 15, 14, 28,
	 29, 15, 28,
	 30, 31, 32,
	 33, 30, 32,
	 34, 35, 36,
	 37, 34, 36,
	 3, 2, 5,
	 4, 3, 5,
	 38, 39, 40,
	 31, 38, 40,
	 41, 20, 14,
	 13, 41, 14,
	 42, 43, 10,
	 9, 42, 10,
	 44, 45, 35,
	 46, 44, 35,
	 47, 48, 49,
	 50, 47, 49,
	 51, 52, 53,
	 54, 51, 53,
	 55, 56, 57,
	 58, 55, 57,
	 59, 60, 61,
	 62, 59, 61,
	 42, 63, 64,
	 43, 42, 64,
	 41, 65, 66,
	 20, 41, 66,
	 67, 68, 69,
	 70, 67, 69,
	 71, 72, 73,
	 74, 71, 73,
	 75, 76, 77,
	 78, 75, 77,
	 52, 47, 50,
	 53, 52, 50,
	 67, 79, 80,
	 68, 67, 80,
	 59, 27, 26,
	 60, 59, 26,
	 81, 82, 83,
	 84, 81, 83,
	 85, 86, 87,
	 88, 85, 87,
	 25, 24, 66,
	 65, 25, 66,
	 89, 90, 91,
	 92, 89, 91,
	 90, 89, 93,
	 94, 90, 93,
	 17, 16, 22,
	 21, 17, 22,
	 75, 19, 18,
	 76, 75, 18,
	 95, 96, 97,
	 98, 95, 97,
	 99, 51, 54,
	 100, 99, 54,
	 20, 23, 28,
	 14, 20, 28,
	 101, 102, 103,
	 104, 101, 103,
	 105, 106, 107,
	 108, 105, 107,
	 109, 110, 111,
	 112, 109, 111,
	 7, 6, 113,
	 114, 7, 113,
	 114, 113, 115,
	 116, 114, 115,
	 117, 118, 119,
	 120, 117, 119,
	 86, 85, 80,
	 79, 86, 80,
	 38, 88, 87,
	 39, 38, 87,
	 121, 122, 123,
	 124, 121, 123,
	 125, 99, 100,
	 126, 125, 100,
	 127, 128, 129,
	 130, 127, 129,
	 131, 132, 133,
	 134, 131, 133,
	 110, 109, 107,
	 106, 110, 107,
	 127, 112, 111,
	 128, 127, 111,
	 105, 108, 119,
	 118, 105, 119,
	 30, 33, 123,
	 122, 30, 123,
	 12, 15, 35,
	 45, 12, 35,
	 8, 11, 135,
	 136, 8, 135,
	 15, 29, 36,
	 35, 15, 36,
	 137, 138, 103,
	 102, 137, 103,
	 139, 136, 135,
	 140, 139, 135,
	 132, 131, 70,
	 69, 132, 70,
	 82, 81, 62,
	 61, 82, 62,
	 141, 58, 57,
	 142, 141, 57,
	 72, 71, 78,
	 77, 72, 78,
	 96, 95, 130,
	 129, 96, 130,
	 143, 144, 145,
	 146, 143, 145,
	 56, 55, 94,
	 56, 147, 57,
	 93, 148, 56,
	 94, 93, 56,
};
#define _Flag_RoundArch_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Flag_RoundArch_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Flag_RoundArch_materials[1] =
{
	{
		{{ 0.210681f, 0.067752f, 0.018038f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Flag",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Flag_RoundArch_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Flag_RoundArch_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Flag_RoundArch_batches[1][2] =
{
	{ 396, 0 },
};
#define _Flag_RoundArch_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Flag_RoundArch_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Flag_RoundArch_meshes[1] =
{
	{
		"default",
		396,
		0,
		0,
	},
};
#define _Flag_RoundArch_meshes_
#endif
