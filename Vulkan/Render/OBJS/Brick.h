// "Brick.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Brick.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Brick_version_
const char Brick_version[4] = { '0','1','9','d' };
#define _Brick_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Brick_vertexcount_
const unsigned Brick_vertexcount = 144;
#define _Brick_vertexcount_
#endif
#ifndef _Brick_indexcount_
const unsigned Brick_indexcount = 228;
#define _Brick_indexcount_
#endif
#ifndef _Brick_materialcount_
const unsigned Brick_materialcount = 2; // can be used for batched draws
#define _Brick_materialcount_
#endif
#ifndef _Brick_meshcount_
const unsigned Brick_meshcount = 2;
#define _Brick_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Brick_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Brick_vertices[144] =
{
	{	{ 0.182910f, 0.280320f, -0.125419f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.066400f, 0.661600f, -0.746900f }	},
	{	{ 0.007089f, 0.296740f, -0.126512f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.066400f, 0.661600f, -0.746900f }	},
	{	{ 0.194689f, 0.303975f, -0.103418f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.066400f, 0.661600f, -0.746900f }	},
	{	{ 0.248144f, 0.298283f, -0.125435f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.198000f, 0.718600f, -0.666600f }	},
	{	{ 0.182910f, 0.280320f, -0.125419f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.198000f, 0.718600f, -0.666600f }	},
	{	{ 0.194689f, 0.303975f, -0.103418f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.198000f, 0.718600f, -0.666600f }	},
	{	{ -0.224044f, 0.258577f, 0.156743f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.288500f, -0.064800f, 0.955300f }	},
	{	{ -0.237527f, 0.195031f, 0.148359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.288500f, -0.064800f, 0.955300f }	},
	{	{ -0.210823f, 0.193311f, 0.156308f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.288500f, -0.064800f, 0.955300f }	},
	{	{ -0.210823f, 0.193311f, 0.156308f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.282800f, 0.039200f, 0.958400f }	},
	{	{ -0.237527f, 0.195031f, 0.148359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.282800f, 0.039200f, 0.958400f }	},
	{	{ -0.222789f, 0.096149f, 0.156753f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.282800f, 0.039200f, 0.958400f }	},
	{	{ 0.217149f, 0.317648f, -0.061468f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.217149f, 0.317648f, 0.090252f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.275163f, 0.317648f, 0.084583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.275163f, 0.317648f, -0.055800f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.269705f, 0.298772f, 0.154224f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, 0.156400f }	},
	{	{ 0.264469f, 0.174502f, 0.146630f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, 0.156400f }	},
	{	{ 0.276109f, 0.190355f, 0.109600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, 0.156400f }	},
	{	{ 0.275163f, 0.317648f, 0.084583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, 0.156400f }	},
	{	{ -0.252743f, 0.317648f, 0.129164f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.001800f, -0.000000f }	},
	{	{ -0.252743f, 0.317648f, -0.100380f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.001800f, -0.000000f }	},
	{	{ -0.252528f, 0.196557f, -0.106051f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.001800f, -0.000000f }	},
	{	{ -0.252528f, 0.196557f, 0.134835f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.001800f, -0.000000f }	},
	{	{ 0.275018f, -0.001742f, 0.080763f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.216869f, -0.001742f, 0.082849f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.216869f, -0.001742f, -0.054065f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.275018f, -0.001742f, -0.051980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.252743f, 0.317648f, -0.100380f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.252743f, 0.317648f, 0.129164f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.182910f, 0.280175f, 0.154202f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012100f, -0.030100f, 0.999500f }	},
	{	{ -0.221520f, 0.296653f, 0.156792f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012100f, -0.030100f, 0.999500f }	},
	{	{ -0.224044f, 0.258577f, 0.156743f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012100f, -0.030100f, 0.999500f }	},
	{	{ 0.208699f, 0.174502f, 0.147905f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012100f, -0.030100f, 0.999500f }	},
	{	{ -0.210823f, 0.193311f, 0.156308f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012100f, -0.030100f, 0.999500f }	},
	{	{ 0.217149f, 0.317648f, 0.090252f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.041400f, 0.841500f, 0.538600f }	},
	{	{ -0.252743f, 0.317648f, 0.129164f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.041400f, 0.841500f, 0.538600f }	},
	{	{ -0.221520f, 0.296653f, 0.156792f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.041400f, 0.841500f, 0.538600f }	},
	{	{ 0.182910f, 0.280175f, 0.154202f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.041400f, 0.841500f, 0.538600f }	},
	{	{ 0.269705f, 0.016944f, 0.154224f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, 0.341000f }	},
	{	{ 0.190982f, 0.037069f, 0.154290f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, 0.341000f }	},
	{	{ 0.216869f, -0.001742f, 0.082849f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, 0.341000f }	},
	{	{ 0.275018f, -0.001742f, 0.080763f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, 0.341000f }	},
	{	{ -0.252528f, 0.196557f, 0.134835f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.655100f, 0.037400f, 0.754600f }	},
	{	{ -0.237527f, 0.195031f, 0.148359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.655100f, 0.037400f, 0.754600f }	},
	{	{ -0.224044f, 0.258577f, 0.156743f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.655100f, 0.037400f, 0.754600f }	},
	{	{ -0.252743f, 0.317648f, 0.129164f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.655100f, 0.037400f, 0.754600f }	},
	{	{ -0.221520f, 0.296653f, 0.156792f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.655100f, 0.037400f, 0.754600f }	},
	{	{ 0.208699f, 0.174502f, 0.147905f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.021100f, 0.999700f }	},
	{	{ -0.210823f, 0.193311f, 0.156308f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.021100f, 0.999700f }	},
	{	{ -0.222789f, 0.096149f, 0.156753f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.021100f, 0.999700f }	},
	{	{ 0.190982f, 0.037069f, 0.154290f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.021100f, 0.999700f }	},
	{	{ -0.218635f, 0.022595f, 0.156824f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.021100f, 0.999700f }	},
	{	{ 0.276109f, 0.190355f, -0.080817f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.005700f, -0.000000f }	},
	{	{ 0.276109f, 0.190355f, 0.109600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.005700f, -0.000000f }	},
	{	{ 0.275018f, -0.001742f, 0.080763f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.005700f, -0.000000f }	},
	{	{ 0.275018f, -0.001742f, -0.051980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.005700f, -0.000000f }	},
	{	{ -0.222789f, 0.096149f, 0.156753f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.802400f, -0.081600f, 0.591200f }	},
	{	{ -0.237527f, 0.195031f, 0.148359f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.802400f, -0.081600f, 0.591200f }	},
	{	{ -0.252528f, 0.196557f, 0.134835f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.802400f, -0.081600f, 0.591200f }	},
	{	{ -0.218635f, 0.022595f, 0.156824f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.802400f, -0.081600f, 0.591200f }	},
	{	{ -0.253953f, -0.001742f, 0.097166f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.802400f, -0.081600f, 0.591200f }	},
	{	{ 0.264469f, 0.174502f, 0.146630f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, 0.151600f }	},
	{	{ 0.269705f, 0.016944f, 0.154224f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, 0.151600f }	},
	{	{ 0.275018f, -0.001742f, 0.080763f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, 0.151600f }	},
	{	{ 0.276109f, 0.190355f, 0.109600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, 0.151600f }	},
	{	{ -0.253953f, -0.001742f, 0.097166f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.253953f, -0.001742f, -0.068383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.253953f, -0.001742f, -0.068383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.007200f, -0.000000f }	},
	{	{ -0.253953f, -0.001742f, 0.097166f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.007200f, -0.000000f }	},
	{	{ -0.252528f, 0.196557f, 0.134835f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.007200f, -0.000000f }	},
	{	{ -0.252528f, 0.196557f, -0.106051f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.007200f, -0.000000f }	},
	{	{ 0.190982f, 0.037069f, 0.154290f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023100f, -0.901300f, 0.432500f }	},
	{	{ -0.218635f, 0.022595f, 0.156824f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023100f, -0.901300f, 0.432500f }	},
	{	{ -0.253953f, -0.001742f, 0.097166f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023100f, -0.901300f, 0.432500f }	},
	{	{ 0.216869f, -0.001742f, 0.082849f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023100f, -0.901300f, 0.432500f }	},
	{	{ 0.276109f, 0.190355f, 0.109600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.007400f, -0.000000f }	},
	{	{ 0.276109f, 0.190355f, -0.080817f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.007400f, -0.000000f }	},
	{	{ 0.275163f, 0.317648f, -0.055800f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.007400f, -0.000000f }	},
	{	{ 0.275163f, 0.317648f, 0.084583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.007400f, -0.000000f }	},
	{	{ 0.264469f, 0.174502f, 0.146630f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, 0.998800f }	},
	{	{ 0.208699f, 0.174502f, 0.147905f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, 0.998800f }	},
	{	{ 0.190982f, 0.037069f, 0.154290f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, 0.998800f }	},
	{	{ 0.269705f, 0.016944f, 0.154224f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, 0.998800f }	},
	{	{ 0.275163f, 0.317648f, 0.084583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.105000f, 0.927100f, 0.359800f }	},
	{	{ 0.217149f, 0.317648f, 0.090252f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.105000f, 0.927100f, 0.359800f }	},
	{	{ 0.182910f, 0.280175f, 0.154202f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.105000f, 0.927100f, 0.359800f }	},
	{	{ 0.269705f, 0.298772f, 0.154224f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.105000f, 0.927100f, 0.359800f }	},
	{	{ 0.269705f, 0.298772f, 0.154224f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016400f, -0.058800f, 0.998100f }	},
	{	{ 0.182910f, 0.280175f, 0.154202f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016400f, -0.058800f, 0.998100f }	},
	{	{ 0.208699f, 0.174502f, 0.147905f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016400f, -0.058800f, 0.998100f }	},
	{	{ 0.264469f, 0.174502f, 0.146630f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016400f, -0.058800f, 0.998100f }	},
	{	{ 0.276109f, 0.190355f, -0.080817f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, -0.156400f }	},
	{	{ 0.264469f, 0.174502f, -0.117846f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, -0.156400f }	},
	{	{ 0.269705f, 0.298772f, -0.125441f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, -0.156400f }	},
	{	{ 0.275163f, 0.317648f, -0.055800f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987700f, -0.006000f, -0.156400f }	},
	{	{ -0.233529f, 0.296653f, -0.128009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012300f, -0.026400f, -0.999600f }	},
	{	{ 0.007089f, 0.296740f, -0.126512f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012300f, -0.026400f, -0.999600f }	},
	{	{ 0.182910f, 0.280320f, -0.125419f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012300f, -0.026400f, -0.999600f }	},
	{	{ -0.245789f, 0.174502f, -0.127875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012300f, -0.026400f, -0.999600f }	},
	{	{ 0.208699f, 0.174502f, -0.119121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012300f, -0.026400f, -0.999600f }	},
	{	{ 0.216869f, -0.001742f, -0.054065f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, -0.341000f }	},
	{	{ 0.190982f, 0.037069f, -0.125507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, -0.341000f }	},
	{	{ 0.269705f, 0.016944f, -0.125441f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, -0.341000f }	},
	{	{ 0.275018f, -0.001742f, -0.051980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131500f, -0.930800f, -0.341000f }	},
	{	{ -0.233529f, 0.296653f, -0.128009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.864000f, 0.054200f, -0.500600f }	},
	{	{ -0.245789f, 0.174502f, -0.127875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.864000f, 0.054200f, -0.500600f }	},
	{	{ -0.252528f, 0.196557f, -0.106051f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.864000f, 0.054200f, -0.500600f }	},
	{	{ -0.252743f, 0.317648f, -0.100380f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.864000f, 0.054200f, -0.500600f }	},
	{	{ -0.230644f, 0.022595f, -0.128040f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012500f, 0.022500f, -0.999700f }	},
	{	{ -0.245789f, 0.174502f, -0.127875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012500f, 0.022500f, -0.999700f }	},
	{	{ 0.208699f, 0.174502f, -0.119121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012500f, 0.022500f, -0.999700f }	},
	{	{ 0.190982f, 0.037069f, -0.125507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.012500f, 0.022500f, -0.999700f }	},
	{	{ -0.253953f, -0.001742f, -0.068383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935000f, -0.073800f, -0.346900f }	},
	{	{ -0.252528f, 0.196557f, -0.106051f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935000f, -0.073800f, -0.346900f }	},
	{	{ -0.245789f, 0.174502f, -0.127875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935000f, -0.073800f, -0.346900f }	},
	{	{ -0.230644f, 0.022595f, -0.128040f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935000f, -0.073800f, -0.346900f }	},
	{	{ 0.275018f, -0.001742f, -0.051980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, -0.151600f }	},
	{	{ 0.269705f, 0.016944f, -0.125441f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, -0.151600f }	},
	{	{ 0.264469f, 0.174502f, -0.117846f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, -0.151600f }	},
	{	{ 0.276109f, 0.190355f, -0.080817f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988400f, 0.002500f, -0.151600f }	},
	{	{ -0.253953f, -0.001742f, -0.068383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022800f, -0.900500f, -0.434200f }	},
	{	{ -0.230644f, 0.022595f, -0.128040f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022800f, -0.900500f, -0.434200f }	},
	{	{ 0.190982f, 0.037069f, -0.125507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022800f, -0.900500f, -0.434200f }	},
	{	{ 0.216869f, -0.001742f, -0.054065f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022800f, -0.900500f, -0.434200f }	},
	{	{ 0.190982f, 0.037069f, -0.125507f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, -0.998800f }	},
	{	{ 0.208699f, 0.174502f, -0.119121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, -0.998800f }	},
	{	{ 0.264469f, 0.174502f, -0.117846f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, -0.998800f }	},
	{	{ 0.269705f, 0.016944f, -0.125441f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016900f, 0.046600f, -0.998800f }	},
	{	{ 0.248144f, 0.298283f, -0.125435f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001600f, 0.959500f, -0.281800f }	},
	{	{ 0.194689f, 0.303975f, -0.103418f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001600f, 0.959500f, -0.281800f }	},
	{	{ 0.217149f, 0.317648f, -0.061468f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001600f, 0.959500f, -0.281800f }	},
	{	{ 0.269705f, 0.298772f, -0.125441f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001600f, 0.959500f, -0.281800f }	},
	{	{ 0.275163f, 0.317648f, -0.055800f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001600f, 0.959500f, -0.281800f }	},
	{	{ 0.182910f, 0.280320f, -0.125419f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016000f, -0.057600f, -0.998200f }	},
	{	{ 0.248144f, 0.298283f, -0.125435f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016000f, -0.057600f, -0.998200f }	},
	{	{ 0.269705f, 0.298772f, -0.125441f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016000f, -0.057600f, -0.998200f }	},
	{	{ 0.208699f, 0.174502f, -0.119121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016000f, -0.057600f, -0.998200f }	},
	{	{ 0.264469f, 0.174502f, -0.117846f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016000f, -0.057600f, -0.998200f }	},
	{	{ -0.233529f, 0.296653f, -0.128009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021200f, 0.903200f, -0.428600f }	},
	{	{ -0.252743f, 0.317648f, -0.100380f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021200f, 0.903200f, -0.428600f }	},
	{	{ 0.217149f, 0.317648f, -0.061468f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021200f, 0.903200f, -0.428600f }	},
	{	{ 0.007089f, 0.296740f, -0.126512f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021200f, 0.903200f, -0.428600f }	},
	{	{ 0.194689f, 0.303975f, -0.103418f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021200f, 0.903200f, -0.428600f }	},
};
#define _Brick_vertices_
#endif
#ifndef _Brick_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Brick_indices[228] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 16, 18,
	 20, 21, 22,
	 23, 20, 22,
	 24, 25, 26,
	 27, 24, 26,
	 28, 29, 13,
	 12, 28, 13,
	 30, 31, 32,
	 33, 30, 32,
	 34, 33, 32,
	 35, 36, 37,
	 38, 35, 37,
	 39, 40, 41,
	 42, 39, 41,
	 43, 44, 45,
	 46, 43, 45,
	 47, 46, 45,
	 48, 49, 50,
	 51, 48, 50,
	 52, 51, 50,
	 53, 54, 55,
	 56, 53, 55,
	 57, 58, 59,
	 60, 57, 59,
	 61, 60, 59,
	 62, 63, 64,
	 65, 62, 64,
	 25, 66, 67,
	 26, 25, 67,
	 68, 69, 70,
	 71, 68, 70,
	 72, 73, 74,
	 75, 72, 74,
	 76, 77, 78,
	 79, 76, 78,
	 80, 81, 82,
	 83, 80, 82,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 95, 92, 94,
	 96, 97, 98,
	 99, 96, 98,
	 100, 99, 98,
	 101, 102, 103,
	 104, 101, 103,
	 105, 106, 107,
	 108, 105, 107,
	 109, 110, 111,
	 112, 109, 111,
	 113, 114, 115,
	 116, 113, 115,
	 117, 118, 119,
	 120, 117, 119,
	 121, 122, 123,
	 124, 121, 123,
	 125, 126, 127,
	 128, 125, 127,
	 129, 130, 131,
	 132, 129, 131,
	 133, 132, 131,
	 134, 135, 136,
	 137, 134, 136,
	 138, 137, 136,
	 139, 140, 141,
	 142, 139, 141,
	 143, 142, 141,
};
#define _Brick_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Brick_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Brick_materials[2] =
{
	{
		{{ 0.231946f, 0.236550f, 0.180764f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Highlights",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.127169f, 0.129624f, 0.099817f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Main",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Brick_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Brick_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Brick_batches[2][2] =
{
	{ 12, 0 },
	{ 216, 12 },
};
#define _Brick_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Brick_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Brick_meshes[2] =
{
	{
		"default",
		12,
		0,
		0,
	},
	{
		"default",
		216,
		12,
		1,
	},
};
#define _Brick_meshes_
#endif
